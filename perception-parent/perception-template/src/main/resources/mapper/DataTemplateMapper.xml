<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lego.perception.template.mapper.DataTemplateMapper">

    <sql id="find_columns">
		id as id, template_code as templateCode, template_name as templateName, description as description,
		created_by as createdBy, creation_date as creationDate, last_update_date as lastUpdateDate, last_updated_by as last_updated_by
	</sql>

    <sql id="condition">
        <if test='id != null'>
            and id = #{id, jdbcType=BIGINT}
        </if>
        <if test="templateCode != null and templateCode != ''">
            and template_code = #{templateCode, jdbcType=VARCHAR}
        </if>
        <if test="templateName != null and templateName != ''">
            and template_name = #{templateName, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="page_condition">
        <if test='arg0.id != null'>
            and id = #{arg0.id, jdbcType=BIGINT}
        </if>
        <if test="arg0.templateCode != null and arg0.templateCode != ''">
            and template_code = #{arg0.templateCode, jdbcType=VARCHAR}
        </if>
        <if test="arg0.templateName != null and arg0.templateName != ''">
            and template_name = #{arg0.templateName, jdbcType=VARCHAR}
        </if>
    </sql>

    <select id="findPagedList" resultType="com.lego.framework.template.model.entity.DataTemplate">
        select <include refid="find_columns"></include>
        from tpl_data_template_t
        <where>
            <include refid="page_condition"></include>
        </where>
        order by creation_date desc
        limit #{arg1.startIndex, jdbcType=INTEGER}, #{arg1.pageSize, jdbcType=INTEGER}
    </select>

    <select id="findPagedListCount" resultType="java.lang.Long">
        select count(1)
        from tpl_data_template_t
        <where>
            <include refid="page_condition"></include>
        </where>
    </select>

    <select id="findList" parameterType="com.lego.framework.template.model.entity.DataTemplate"
            resultType="com.lego.framework.template.model.entity.DataTemplate">
        select <include refid="find_columns"></include>
        from tpl_data_template_t
        <where>
            <include refid="condition"></include>
        </where>
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.lego.framework.template.model.entity.DataTemplate">
        insert into tpl_data_template_t
        (template_code, template_name, description, created_by, last_updated_by, last_update_date)
        values
        (
         #{templateCode, jdbcType=VARCHAR},
         #{templateName, jdbcType=VARCHAR},
         #{description, jdbcType=VARCHAR},
         #{createdBy, jdbcType=BIGINT},
         #{lastUpdatedBy, jdbcType=BIGINT},
         #{lastUpdateDate, jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="update">
        update tpl_data_template_t
        <set>
            <if test='templateCode != null'>
                template_code = #{templateCode, jdbcType=VARCHAR},
            </if>
            <if test='templateName != null'>
                template_name = #{templateName, jdbcType=VARCHAR},
            </if>
            <if test='description != null'>
                description = #{description, jdbcType=VARCHAR},
            </if>
            <if test='lastUpdatedBy != null'>
                last_updated_by = #{lastUpdatedBy, jdbcType=VARCHAR},
            </if>
            <if test='lastUpdateDate != null'>
                last_update_date = #{lastUpdateDate, jdbcType=TIMESTAMP}
            </if>
        </set>
        where id = #{id, jdbcType=BIGINT}
    </update>

    <delete id="delete">
        delete from tpl_data_template_t
        where id = #{id, jdbcType=BIGINT}
    </delete>
</mapper>
