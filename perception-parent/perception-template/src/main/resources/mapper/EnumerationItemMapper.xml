<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lego.perception.template.mapper.EnumerationItemMapper">
    <select id="findList" parameterType="com.lego.framework.template.model.entity.EnumerationItem"
            resultType="com.lego.framework.template.model.entity.EnumerationItem">
        select id as id, enum_id as enumId, label as label, `value` as `value`
        from tpl_enum_item_t
        <where>
            <if test="enumId != null">
                and enum_id = #{enumId, jdbcType=BIGINT}
            </if>
            <if test="enumIds != null and enumIds.size > 0">
                and enum_id in
                <foreach collection="enumIds" item="item" index="index" separator="," open="(" close=")">
                    #{enumIds[${index}], jdbcType=BIGINT}
                </foreach>
            </if>
        </where>
        order by value asc
    </select>

    <insert id="insertList" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.lego.framework.template.model.entity.EnumerationItem">
        insert into tpl_enum_item_t
        (enum_id, label, `value`)
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.enumId, jdbcType=BIGINT},
            #{item.label, jdbcType=VARCHAR},
            #{item.value, jdbcType=INTEGER}
            )
        </foreach>
    </insert>

    <delete id="deleteList">
        delete from tpl_enum_item_t
        where id in
        <foreach collection="list" separator="," item="item" open="(" close=")">
            #{item, jdbcType=BIGINT}
        </foreach>
    </delete>

    <delete id="deleteByEnumId">
        delete
        from tpl_enum_item_t
        where enum_id = #{enumId, jdbcType=BIGINT}
    </delete>


    <select id="findItem" parameterType="com.lego.framework.template.model.entity.EnumerationItem"
            resultType="com.lego.framework.template.model.entity.EnumerationItem">
        select id as id, enum_id as enumId, label as label, `value` as `value`
        from tpl_enum_item_t
        <where>
            <if test="enumId != null">
                and enum_id = #{enumId, jdbcType=BIGINT}
            </if>
            <if test="value != null">
                and value=#{value,jdbcType=INTEGER}
            </if>
            <if test="label!=null">
                and label=#{label,jdbcType=VARCHAR}
            </if>
        </where>
        order by value asc
    </select>


</mapper>
