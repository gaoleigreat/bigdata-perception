<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lego.perception.business.mapper.BusinessMapper">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.lego.framework.business.model.entity.Business" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="templateCode" column="template_code"/>
        <result property="type" column="type"/>
        <result property="tableName" column="table_name"/>
        <result property="creationDate" column="creation_date"/>
        <result property="createdBy" column="created_by"/>
        <result property="lastUpdateDate" column="last_update_date"/>
        <result property="lastUpdatedBy" column="last_updated_by"/>
    </resultMap>

    <!--
          选择性插入
        -->
    <sql id="Base_Insert_Selective">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="templateCode != null">
                template_code,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="tableName != null">
                table_name,
            </if>
            <if test="creationDate != null">
                creation_date,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="lastUpdateDate != null">
                last_update_date,
            </if>
            <if test="lastUpdatedBy != null">
                last_updated_by
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="templateCode != null">
                #{templateCode,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="tableName != null">
                #{tableName,jdbcType=VARCHAR},
            </if>
            <if test="creationDate != null">
                #{creationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=BIGINT},
            </if>
            <if test="lastUpdateDate != null">
                #{lastUpdateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatedBy != null">
                #{lastUpdatedBy,jdbcType=BIGINT}
            </if>
        </trim>
    </sql>

    <!--
      数据库表的基本查询列名集合
    -->
    <sql id="Base_Column_List">
        id, name, template_code, type, table_name, creation_date, created_by, last_update_date, last_updated_by
    </sql>

    <!--
        Where子句
      -->
    <sql id="Base_Query_Where">
        <if test="id != null">
            and id = #{id,jdbcType=BIGINT}
        </if>
        <if test="name != null">
            and name = #{name,jdbcType=VARCHAR}
        </if>
        <if test="templateCode != null">
            and template_code = #{templateCode,jdbcType=VARCHAR}
        </if>
        <if test="type != null">
            and type = #{type,jdbcType=VARCHAR}
        </if>
        <if test="tableName != null">
            and table_name = #{tableName,jdbcType=VARCHAR}
        </if>
        <if test="creationDate != null">
            and creation_date = #{creationDate,jdbcType=TIMESTAMP}
        </if>
        <if test="createdBy != null">
            and created_by = #{createdBy,jdbcType=BIGINT}
        </if>
        <if test="lastUpdateDate != null">
            and last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP}
        </if>
        <if test="lastUpdatedBy != null">
            and last_updated_by = #{lastUpdatedBy,jdbcType=BIGINT}
        </if>
    </sql>

    <!--
        基本更新字段
    -->
    <sql id="Base_Update_Column">
        <set>
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="templateCode != null">
                template_code = #{templateCode,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="tableName != null">
                table_name = #{tableName,jdbcType=VARCHAR},
            </if>
            <if test="creationDate != null">
                creation_date = #{creationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=BIGINT},
            </if>
            <if test="lastUpdateDate != null">
                last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatedBy != null">
                last_updated_by = #{lastUpdatedBy,jdbcType=BIGINT}
            </if>
        </set>
    </sql>

    <!--
        分页查询数据库表
      -->
    <select id="selectPaged" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tpl_business
    </select>

    <!--
      根据主键查询数据库表
    -->
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tpl_business
        where id = #{id,jdbcType=BIGINT}
    </select>


    <!--
      根据主键删除数据库表中的记录
    -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete FROM tpl_business
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <!--
      添加一条记录到数据库表中
    -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.lego.framework.business.model.entity.Business">
        insert into tpl_business
        (<include refid="Base_Column_List"/>)
        values (
        <if test="id != null">
            #{id,jdbcType=BIGINT},
        </if>
        <if test="name != null">
            #{name,jdbcType=VARCHAR},
        </if>
        <if test="templateCode != null">
            #{templateCode,jdbcType=VARCHAR},
        </if>
        <if test="type != null">
            #{type,jdbcType=VARCHAR},
        </if>
        <if test="tableName != null">
            #{tableName,jdbcType=VARCHAR},
        </if>
        <if test="creationDate != null">
            #{creationDate,jdbcType=TIMESTAMP},
        </if>
        <if test="createdBy != null">
            #{createdBy,jdbcType=BIGINT},
        </if>
        <if test="lastUpdateDate != null">
            #{lastUpdateDate,jdbcType=TIMESTAMP},
        </if>
        <if test="lastUpdatedBy != null">
            #{lastUpdatedBy,jdbcType=BIGINT}
        </if>
        )
    </insert>

    <!--
     有选择的添加一条记录到数据库表中
   -->
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.lego.framework.business.model.entity.Business">
        insert into tpl_business
        <include refid="Base_Insert_Selective"/>
    </insert>

    <!--
      有选择的可忽略添加一条记录到数据库表中
    -->
    <insert id="insertSelectiveIgnore" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.lego.framework.business.model.entity.Business">
        insert ignore into tpl_business
        <include refid="Base_Insert_Selective"/>
    </insert>

    <!--
      根据主键有选择的更新数据库表
    -->
    <update id="updateByPrimaryKeySelective" parameterType="com.lego.framework.business.model.entity.Business">
        update tpl_business
        <include refid="Base_Update_Column"></include>
        where id = #{id,jdbcType=BIGINT}
    </update>


    <!--
      根据主键更新数据库表
    -->
    <update id="updateByPrimaryKey" parameterType="com.lego.framework.business.model.entity.Business">
        update tpl_business
        <set>
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="templateCode != null">
                template_code = #{templateCode,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="tableName != null">
                table_name = #{tableName,jdbcType=VARCHAR},
            </if>
            <if test="creationDate != null">
                creation_date = #{creationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=BIGINT},
            </if>
            <if test="lastUpdateDate != null">
                last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatedBy != null">
                last_updated_by = #{lastUpdatedBy,jdbcType=BIGINT}
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!--
      批量添加记录到数据库表中
    -->
    <insert id="batchInsert" parameterType="java.util.List">
        insert into tpl_business
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id, name, template_code, type, table_name, creation_date, created_by, last_update_date, last_updated_by
        </trim>
        values
        <foreach collection="list" index="index" item="item" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.id,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR}, #{item.templateCode,jdbcType=VARCHAR},
                #{item.type,jdbcType=VARCHAR}, #{item.tableName,jdbcType=VARCHAR},
                #{item.creationDate,jdbcType=TIMESTAMP}, #{item.createdBy,jdbcType=BIGINT},
                #{item.lastUpdateDate,jdbcType=TIMESTAMP}, #{item.lastUpdatedBy,jdbcType=BIGINT}
            </trim>
        </foreach>
    </insert>

    <!--
      根据主键批量更新数据库表中的记录
    -->
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            update tpl_business
            <set>
                <trim suffixOverrides=",">
                    <if test="item.id != null">
                        id = #{item.id,jdbcType=BIGINT},
                    </if>
                    <if test="item.name != null">
                        name = #{item.name,jdbcType=VARCHAR},
                    </if>
                    <if test="item.templateCode != null">
                        template_code = #{item.templateCode,jdbcType=VARCHAR},
                    </if>
                    <if test="item.type != null">
                        type = #{item.type,jdbcType=VARCHAR},
                    </if>
                    <if test="item.tableName != null">
                        table_name = #{item.tableName,jdbcType=VARCHAR},
                    </if>
                    <if test="item.creationDate != null">
                        creation_date = #{item.creationDate,jdbcType=TIMESTAMP},
                    </if>
                    <if test="item.createdBy != null">
                        created_by = #{item.createdBy,jdbcType=BIGINT},
                    </if>
                    <if test="item.lastUpdateDate != null">
                        last_update_date = #{item.lastUpdateDate,jdbcType=TIMESTAMP},
                    </if>
                    <if test="item.lastUpdatedBy != null">
                        last_updated_by = #{item.lastUpdatedBy,jdbcType=BIGINT}
                    </if>
                </trim>
            </set>
            <where>
                <trim suffixOverrides=",">
                    where id = #{id,jdbcType=BIGINT}
                </trim>
            </where>
        </foreach>
    </update>

    <!--
     使用给定的字段名定义Where子句
   -->
    <sql id="Identifiers_Array_Conditions">
        <foreach collection="array" index="index" item="item" separator=" and ">
            <if test="item == 'id'">
                id = #{id,jdbcType=BIGINT}
            </if>
            <if test="item == 'name'">
                name = #{name,jdbcType=VARCHAR}
            </if>
            <if test="item == 'templateCode'">
                template_code = #{templateCode,jdbcType=VARCHAR}
            </if>
            <if test="item == 'type'">
                type = #{type,jdbcType=VARCHAR}
            </if>
            <if test="item == 'tableName'">
                table_name = #{tableName,jdbcType=VARCHAR}
            </if>
            <if test="item == 'creationDate'">
                creation_date = #{creationDate,jdbcType=TIMESTAMP}
            </if>
            <if test="item == 'createdBy'">
                created_by = #{createdBy,jdbcType=BIGINT}
            </if>
            <if test="item == 'lastUpdateDate'">
                last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP}
            </if>
            <if test="item == 'lastUpdatedBy'">
                last_updated_by = #{lastUpdatedBy,jdbcType=BIGINT}
            </if>
        </foreach>
    </sql>

    <!--
      存在即更新否则插入
    -->
    <update id="upsert" parameterType="com.lego.framework.business.model.entity.Business">
        insert into tpl_business
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id, name, template_code, type, table_name, creation_date, created_by, last_update_date, last_updated_by
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{templateCode,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
            #{tableName,jdbcType=VARCHAR}, #{creationDate,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=BIGINT},
            #{lastUpdateDate,jdbcType=TIMESTAMP}, #{lastUpdatedBy,jdbcType=BIGINT}
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            #{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{templateCode,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
            #{tableName,jdbcType=VARCHAR}, #{creationDate,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=BIGINT},
            #{lastUpdateDate,jdbcType=TIMESTAMP}, #{lastUpdatedBy,jdbcType=BIGINT}
        </trim>
    </update>


    <!--
      带有空值检查的存在即更新否则插入
    -->
    <update id="upsertSelective" parameterType="com.lego.framework.business.model.entity.Business">
        insert into tpl_business
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id !=null ">
                id,
            </if>
            <if test="name !=null ">
                name,
            </if>
            <if test="templateCode !=null ">
                template_code,
            </if>
            <if test="type !=null ">
                type,
            </if>
            <if test="tableName !=null ">
                table_name,
            </if>
            <if test="creationDate !=null ">
                creation_date,
            </if>
            <if test="createdBy !=null ">
                created_by,
            </if>
            <if test="lastUpdateDate !=null ">
                last_update_date,
            </if>
            <if test="lastUpdatedBy !=null ">
                last_updated_by
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id !=null ">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="name !=null ">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="templateCode !=null ">
                template_code = #{templateCode,jdbcType=VARCHAR},
            </if>
            <if test="type !=null ">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="tableName !=null ">
                table_name = #{tableName,jdbcType=VARCHAR},
            </if>
            <if test="creationDate !=null ">
                creation_date = #{creationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy !=null ">
                created_by = #{createdBy,jdbcType=BIGINT},
            </if>
            <if test="lastUpdateDate !=null ">
                last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatedBy !=null ">
                last_updated_by = #{lastUpdatedBy,jdbcType=BIGINT}
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id !=null ">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="name !=null ">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="templateCode !=null ">
                template_code = #{templateCode,jdbcType=VARCHAR},
            </if>
            <if test="type !=null ">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="tableName !=null ">
                table_name = #{tableName,jdbcType=VARCHAR},
            </if>
            <if test="creationDate !=null ">
                creation_date = #{creationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy !=null ">
                created_by = #{createdBy,jdbcType=BIGINT},
            </if>
            <if test="lastUpdateDate !=null ">
                last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatedBy !=null ">
                last_updated_by = #{lastUpdatedBy,jdbcType=BIGINT}
            </if>
        </trim>
    </update>

    <select id="query" resultMap="BaseResultMap" parameterType="com.lego.framework.business.model.entity.Business">
        select
        <include refid="Base_Column_List"/>
        from tpl_business
        <where>
            <include refid="Base_Query_Where"></include>
        </where>
    </select>

    <select id="queryTotal" resultType="long">
        select count(*) from tpl_business
    </select>


    <delete id="deleteBatch">
        delete from tpl_business where id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>